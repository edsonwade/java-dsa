### Easy Level Exercises

1. **Sum of Array Elements**: Write a program to find the sum of all elements in an array.
2. **Find Maximum Element**: Write a program to find the maximum element in an array.
3. **Reverse Array**: Write a program to reverse the elements of an array.
4. **Count Even and Odd Numbers**: Write a program to count the number of even and odd numbers in an array.
5. **Find Second-Largest Element**: Write a program to find the second-largest element in an array.
6. **Remove Duplicates**: Write a program to remove duplicate elements from an array.
7. **Merge Two Arrays**: Write a program to merge two arrays into a single array.
8. **Find Missing Number**: Write a program to find the missing number in an array of integers from one to n.
9. **Check Palindrome Array**: Write a program to check if an array is a palindrome.
10. **Find Common Elements**: Write a program to find common elements between two arrays.

### Medium Level Exercises

1. **Rotate Array**: Write a program to rotate an array by k positions.
2. **Find Pair with Given Sum**: Write a program to find a pair of elements in an array whose sum is equal to a given number.
3. **Sort Array**: Write a program to sort an array using bubble sort.
4. **Find Intersection of Two Arrays**: Write a program to find the intersection of two arrays.
5. **Find Union of Two Arrays**: Write a program to find the union of two arrays.
6. **Find Duplicates**: Write a program to find duplicate elements in an array.
7. **Find Majority Element**: Write a program to find the majority element in an array (element that appears more than n/2 times).
8. **Find Subarray with Given Sum**: Write a program to find a subarray with a given sum.
9. **Find Longest Increasing Subsequence**: Write a program to find the longest increasing subsequence in an array.
10. **Find Minimum Platforms**: Write a program to find the minimum number of platforms required for a railway station given arrival and departure times of trains.

### Hard Level Exercises

1. **Find Maximum Product Subarray**: Write a program to find the maximum product subarray in an array.
2. **Find Median of Two Sorted Arrays**: Write a program to find the median of two sorted arrays.
3. **Find Kth Smallest Element**: Write a program to find the kth smallest element in an array.
4. **Find Maximum Sum Subarray**: Write a program to find the maximum sum subarray using Kadane's algorithm.
5. **Find Longest Consecutive Sequence**: Write a program to find the longest consecutive sequence in an array.
6. **Trapping Rainwater**: Write a program to find the amount of rainwater trapped between the bars in an array.
7. **Find Minimum Jumps to Reach End**: Write a program to find the minimum number of jumps required to reach the end of an array.
8. ** Find the Largest Rectangle in Histogram**: Write a program to find the largest rectangle in a histogram.
9. **Find Maximum Sum Increasing Subsequence**: Write a program to find the maximum sum increasing subsequence in an array.
10. **Find Minimum Number of Swaps to Sort Array**: Write a program to find the minimum number of swaps required to sort an array.



### Easy Level Exercises

1. **Sum of Array Elements**:
   - **Input**: `[1, 2, 3, 4, 5]`
   - **Output**: `15`

2. **Find Maximum Element**:
   - **Input**: `[1, 2, 3, 4, 5]`
   - **Output**: `5`

3. **Reverse Array**:
   - **Input**: `[1, 2, 3, 4, 5]`
   - **Output**: `[5, 4, 3, 2, 1]`

4. **Count Even and Odd Numbers**:
   - **Input**: `[1, 2, 3, 4, 5]`
   - **Output**: `Even: 2, Odd: 3`

5. **Find Second Largest Element**:
   - **Input**: `[1, 2, 3, 4, 5]`
   - **Output**: `4`

6. **Remove Duplicates**:
   - **Input**: `[1, 2, 2, 3, 4, 4, 5]`
   - **Output**: `[1, 2, 3, 4, 5]`

7. **Merge Two Arrays**:
   - **Input**: `[1, 2, 3]`, `[4, 5, 6]`
   - **Output**: `[1, 2, 3, 4, 5, 6]`

8. **Find Missing Number**:
   - **Input**: `[1, 2, 4, 5]` (from 1 to 5)
   - **Output**: `3`

9. **Check Palindrome Array**:
   - **Input**: `[1, 2, 3, 2, 1]`
   - **Output**: `true`

10. **Find Common Elements**:
    - **Input**: `[1, 2, 3]`, `[2, 3, 4]`
    - **Output**: `[2, 3]`

### Medium Level Exercises

1. **Rotate Array**:
   - **Input**: `[1, 2, 3, 4, 5]`, `k = 2`
   - **Output**: `[4, 5, 1, 2, 3]`

2. **Find Pair with Given Sum**:
   - **Input**: `[1, 2, 3, 4, 5]`, `sum = 6`
   - **Output**: `(1, 5)`, `(2, 4)`

3. **Sort Array**:
   - **Input**: `[5, 3, 1, 4, 2]`
   - **Output**: `[1, 2, 3, 4, 5]`

4. **Find Intersection of Two Arrays**:
   - **Input**: `[1, 2, 3]`, `[2, 3, 4]`
   - **Output**: `[2, 3]`

5. **Find Union of Two Arrays**:
   - **Input**: `[1, 2, 3]`, `[2, 3, 4]`
   - **Output**: `[1, 2, 3, 4]`

6. **Find Duplicates**:
   - **Input**: `[1, 2, 2, 3, 4, 4, 5]`
   - **Output**: `[2, 4]`

7. **Find Majority Element**:
   - **Input**: `[1, 2, 2, 2, 3, 4, 2]`
   - **Output**: `2`

8. **Find Subarray with Given Sum**:
   - **Input**: `[1, 2, 3, 7, 5]`, `sum = 12`
   - **Output**: `[2, 3, 7]`

9. **Find Longest Increasing Subsequence**:
   - **Input**: `[10, 22, 9, 33, 21, 50, 41, 60, 80]`
   - **Output**: `[10, 22, 33, 50, 60, 80]`

10. **Find Minimum Platforms**:
    - **Input**: `arrivals = [900, 940, 950, 1100, 1500, 1800]`, `departures = [910, 1200, 1120, 1130, 1900, 2000]`
    - **Output**: `3`

### Hard Level Exercises

1. **Find Maximum Product Subarray**:
   - **Input**: `[2, 3, -2, 4]`
   - **Output**: `6`

2. **Find Median of Two Sorted Arrays**:
   - **Input**: `[1, 3]`, `[2]`
   - **Output**: `2.0`

3. **Find Kth Smallest Element**:
   - **Input**: `[7, 10, 4, 3, 20, 15]`, `k = 3`
   - **Output**: `7`

4. **Find Maximum Sum Subarray**:
   - **Input**: `[-2, 1, -3, 4, -1, 2, 1, -5, 4]`
   - **Output**: `6`

5. **Find Longest Consecutive Sequence**:
   - **Input**: `[100, 4, 200, 1, 3, 2]`
   - **Output**: `4`

6. **Trapping Rain Water**:
   - **Input**: `[0, 1, 0, 2, 1, 0, 1, 3, 2, 1, 2, 1]`
   - **Output**: `6`

7. **Find Minimum Jumps to Reach End**:
   - **Input**: `[1, 3, 5, 8, 9, 2, 6, 7, 6, 8, 9]`
   - **Output**: `3`

8. **Find Largest Rectangle in Histogram**:
   - **Input**: `[2, 1, 5, 6, 2, 3]`
   - **Output**: `10`

9. **Find Maximum Sum Increasing Subsequence**:
   - **Input**: `[1, 101, 2, 3, 100, 4, 5]`
   - **Output**: `106`

10. **Find Minimum Number of Swaps to Sort Array**:
    - **Input**: `[4, 3, 2, 1]`
    - **Output**: `2`


 public static int[] removeDuplicate(int[] arr) {
         Set<Integer> set = new HashSet<>();
         if (arr == null || arr.length == 0) {
             return new int[0];
         }
         for (int index : arr) {
             set.add(index);
         }

         return set.stream().mapToInt(i -> i).toArray();
     }